# compose.dev.yaml
services:
  next-app:
    container_name: next-app-dev
    build:
      context: ./my-app
      dockerfile: dev.Dockerfile
      args:
        # Build-time variables
        AUTH_AUTH0_ID: ${AUTH_AUTH0_ID}
        AUTH_AUTH0_SECRET: ${AUTH_AUTH0_SECRET}
        AUTH_AUTH0_ISSUER: ${AUTH_AUTH0_ISSUER}
        NEXTAUTH_URL: ${NEXTAUTH_URL}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        NEXT_PUBLIC_AUTH0_ISSUER: ${NEXT_PUBLIC_AUTH0_ISSUER}
        NEXT_PUBLIC_AUTH0_ID: ${NEXT_PUBLIC_AUTH0_ID}
        GEMINI_API_KEY: ${GEMINI_API_KEY}
        DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./my-app/src:/app/src
      - ./my-app/prisma:/app/prisma
      - ./my-app/public:/app/public
    restart: always
    ports:
      - 3001:3001
    depends_on:
      - postgres
    environment:
      # Runtime variables
      AUTH_AUTH0_ID: ${AUTH_AUTH0_ID}
      AUTH_AUTH0_SECRET: ${AUTH_AUTH0_SECRET}
      AUTH_AUTH0_ISSUER: ${AUTH_AUTH0_ISSUER}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXT_PUBLIC_AUTH0_ISSUER: ${NEXT_PUBLIC_AUTH0_ISSUER}
      NEXT_PUBLIC_AUTH0_ID: ${NEXT_PUBLIC_AUTH0_ID}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - my_network

  postgres:
    container_name: postgres-dev
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mylittletextbook
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - my_network

volumes:
  postgres_data_dev:

networks:
  my_network:
    external: true